apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: This is a test container. For testing the MPL pipelines, not to be
      deployed anywhere.
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: dockertest
      app.kubernetes.io/name: dockertest
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: dockertest
        app.kubernetes.io/version: pr-1234
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: dockertest
        app.kubernetes.io/instance: dockertest
        maintainers: MPyL
        maintainer: MPyL
        version: pr-1234
        revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
      name: dockertest
    spec:
      containers:
      - command:
        - script.sh
        - --opt
        env:
        - name: SOME_ENV
          value: PullRequest
        - name: WITH_NAMESPACE
          value: minimalService.mpyl.svc.cluster.local
        - name: SOME_SEALED_SECRET_ENV
          valueFrom:
            secretKeyRef:
              key: SOME_SEALED_SECRET_ENV
              name: dockertest
              optional: false
        - name: SOME_SECRET_ENV
          valueFrom:
            secretKeyRef:
              key: password
              name: some-secret-name
              optional: false
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RESOURCE_FIELD_REFERENCE
          valueFrom:
            resourceFieldRef:
              containerName: minimalService
              divisor: '0.5'
              resource: limits.memory
        image: registry/image:123
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 99
          grpc:
            port: 123
            service: grpcService
          httpGet:
            path: /health
            port: port-0
          periodSeconds: 30
          successThreshold: 0
          timeoutSeconds: 20
        name: service
        ports:
        - containerPort: 80
          name: port-0
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 200m
            memory: 256Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: port-0
          initialDelaySeconds: 4
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 3
      serviceAccount: dockertest
      serviceAccountName: dockertest
