{{- define "job.body" -}}
spec:
  ttlSecondsAfterFinished: {{ .Values.ttlSecondsAfterFinished }}
    {{- with .Values.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ . }}
    {{- end }}
  template:
    metadata:
      annotations:
        image: {{ .Values.image | quote }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "job.serviceAccountName" . }}
      {{- end }}
      containers:
        - name: {{ include "job.fullname" . }}
          image: {{ .Values.image }}
          command:
            {{- .Values.command | toYaml | nindent 14 }}
          args:
            {{- .Values.args | toYaml | nindent 14 }}
          imagePullPolicy: Always
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      restartPolicy: Never
  backoffLimit: {{ .Values.backoffLimit }}
  {{- end -}}

  {{- if .Values.cron.schedule -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "job.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "job.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.cron.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.cron.successfulJobHistory }}
  failedJobsHistoryLimit: {{ .Values.cron.failedJobHistory }}
  concurrencyPolicy: {{ .Values.cron.concurrencyPolicy }}
  jobTemplate:
    {{- include "job.body" . | nindent 4 }}
  {{- else -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "job.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "job.labels" . | nindent 4 }}
  annotations:
    {{- include "service.annotations" . | nindent 4 }}
  {{ include "job.body" . }}
  {{- end -}}