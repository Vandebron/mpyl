# This file was generated by MPyL. DO NOT EDIT DIRECTLY.
---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: This is a test container. For testing the MPL pipelines, not to be
      deployed anywhere.
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: dockertest
      app.kubernetes.io/name: dockertest
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: dockertest
        app.kubernetes.io/version: pr-1234
        app.kubernetes.io/name: dockertest
        app.kubernetes.io/instance: dockertest
        maintainers: MPyL
        maintainer: MPyL
        version: pr-1234
        revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
      name: dockertest
    spec:
      containers:
      - command:
        - script.sh
        - --opt
        env:
        - name: SOME_ENV
          value: PullRequest
        - name: WITH_NAMESPACE
          value: minimalService.mpyl.svc.cluster.local
        - name: SOME_SEALED_SECRET_ENV
          valueFrom:
            secretKeyRef:
              key: SOME_SEALED_SECRET_ENV
              name: dockertest
              optional: false
        - name: SOME_SECRET_ENV
          valueFrom:
            secretKeyRef:
              key: password
              name: some-secret-name
              optional: false
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RESOURCE_FIELD_REFERENCE
          valueFrom:
            resourceFieldRef:
              containerName: minimalService
              divisor: '0.5'
              resource: limits.memory
        image: registry/image:123
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 99
          grpc:
            port: 123
            service: grpcService
          httpGet:
            path: /health
            port: port-0
          periodSeconds: 30
          successThreshold: 0
          timeoutSeconds: 20
        name: service
        ports:
        - containerPort: 80
          name: port-0
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 200m
            memory: 256Mi
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: port-0
          initialDelaySeconds: 4
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 3
      serviceAccount: dockertest
      serviceAccountName: dockertest
---
# dockertest-ingress-0-http
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest-ingress-0-http
spec:
  routes:
  - kind: Rule
    match: Host(`payments-1234.test.nl`)
    services:
    - name: dockertest
      kind: Service
      port: 8080
    middlewares:
    - name: traefik-https-redirect@kubernetescrd
    - name: dockertest-ingress-0-whitelist
  entryPoints:
  - web
---
# dockertest-ingress-0-https
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest-ingress-0-https
spec:
  routes:
  - kind: Rule
    match: Host(`payments-1234.test.nl`)
    services:
    - name: dockertest
      kind: Service
      port: 8080
    middlewares:
    - name: dockertest-ingress-0-whitelist
  entryPoints:
  - websecure
  tls:
    secretName: le-custom-prod-wildcard-cert
    options:
      name: insecure-ciphers
      namespace: traefik
---
# dockertest-ingress-0-whitelist
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  annotations:
    VPN: 10.0.0.1
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest-ingress-0-whitelist
spec:
  ipWhiteList:
    sourceRange:
    - 10.0.0.1
---
# dockertest-ingress-1-http
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest-ingress-1-http
spec:
  routes:
  - kind: Rule
    match: Host(`some.other.host.com`)
    services:
    - name: dockertest
      kind: Service
      port: 4091
    middlewares:
    - name: traefik-https-redirect@kubernetescrd
    - name: dockertest-ingress-1-whitelist
    priority: 1000
  entryPoints:
  - web
---
# dockertest-ingress-1-https
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest-ingress-1-https
spec:
  routes:
  - kind: Rule
    match: Host(`some.other.host.com`)
    services:
    - name: dockertest
      kind: Service
      port: 4091
    middlewares:
    - name: dockertest-ingress-1-whitelist
    priority: 1000
  entryPoints:
  - websecure
  tls:
    secretName: le-other-prod-wildcard-cert
---
# dockertest-ingress-1-whitelist
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  annotations:
    VPN: 10.0.0.1
    K8s-Test: 1.2.3.0, 1.2.3.1
    TargetSpecificWhitelist: 1.2.3.4
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest-ingress-1-whitelist
spec:
  ipWhiteList:
    sourceRange:
    - 10.0.0.1
    - 1.2.3.0
    - 1.2.3.1
    - 1.2.3.4
---
# prometheus-rule
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest-prometheus-rule
spec:
  groups:
  - name: dockertest-prometheus-rule-group
    rules:
    - alert: ServiceError
      annotations:
        description: Service has encountered errors
      expr: 'true'
      for: 1m
      labels:
        alertname: ServiceError
        severity: warning
    - alert: the name of the alert
      annotations:
        description: |-
          **{{ "{{" }} $value }}** new signup failures with reason `{{ "{{" }} $labels.reason }}`.
          You can find more details in: <unrelated link>
      expr: a prometheus expression
      for: 0m
      labels:
        alertname: the name of the alert
        severity: signup_alerting_once
---
# role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest
rules:
- apiGroups:
  - ''
  resources:
  - pods
  verbs:
  - list
  - get
---
# rolebinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dockertest
subjects:
- kind: ServiceAccount
  name: dockertest
  namespace: pr-1234
---
# sealed-secrets
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: 'true'
  labels:
    chart: service-0.1.0
  name: dockertest
spec:
  encryptedData:
    SOME_SEALED_SECRET_ENV: AgCA5/qvMMp/qOyXA62f/4k89gB9vk/G9pwLzMwUH9ytqP97ml9V7+shq01Khkgz638uJz8UTff92cU2iq3yLAiElAEdQb0lwBCvG7qMXSeTkmCpZVJc8+oLbAC2m6IX3qXYFiOzwCrvrFiyPf1vxZGMcedJf0+13938yFyrPnnCH+DZGLReFWtJfp5POcvktaz9tv4kAz4LCvvwvFgPVeO3fxM2PDnegvbX7K2ojwftaFoyu0rOBylQaUsMGZd9KcFxuPnY6RXSrGh5lbyFHRZRy3RtrsWGy7Vh/vwMRjeHM3ORN4WeLQXpCRpvegD7bngXmR9yFuuD9FLDw/Wapllhv1sRX4uP2C9Fghdp005g/8iQ8IUHbC/7Rp967xs9YU6UO3kIURCQabvXpmDQ7kNbAcnDjilBY4WR8Wcsu3KJRA6dcpiZhhuQ7JbKNtySGhnRtzDuamuFUXTx8qkiegB0I8Db7Fd9K2I4bOuqhHoEgp9miQEWkd60rO5vcOqeuGzZE12ZN8XB8Iq4/QRWWafl8pjKrDf+r9ASFHUt2eAnvzK6GkGrZzZ2NRCew2csPU5V0iodkHZL+OpKQQ181J7YuJ4spziyOkzIBRRGwkrxfLmVAt5r6B5gcSsU30iOkHmbSgE37uDJAiSJmsnkzrkWARTKzEYGgvJcxKxI0ftsx5SggHCItSdnKlNBQ23bSTTdCKM1kJe0eHWHKg==
---
# service
apiVersion: v1
kind: Service
metadata:
  annotations:
    description: This is a test container. For testing the MPL pipelines, not to be
      deployed anywhere.
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest
spec:
  ports:
  - name: 8080-webservice-port
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/instance: dockertest
    app.kubernetes.io/name: dockertest
  type: ClusterIP
---
# service-account
apiVersion: v1
imagePullSecrets:
- name: acme-registry
kind: ServiceAccount
metadata:
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest
---
# service-monitor
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    name: dockertest
    app.kubernetes.io/version: pr-1234
    app.kubernetes.io/name: dockertest
    app.kubernetes.io/instance: dockertest
    maintainers: MPyL
    maintainer: MPyL
    version: pr-1234
    revision: 2ad3293a7675d08bc037ef0846ef55897f38ec8f
  name: dockertest-service-monitor
spec:
  endpoints:
  - honorLabels: true
    path: /metrics
    targetPort: 8080
  namespaceSelector:
    matchNames:
    - pr-1234
  selector:
    matchLabels:
      app.kubernetes.io/name: dockertest
