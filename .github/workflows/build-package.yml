name: build

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  Build_Package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout Source

      - name: Cache Dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: /github/home/.local/share/virtualenvs/*
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv

      - name: Install dependencies
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: install -d

      - name: Run lint
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: run lint

      - name: Install Types
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: run install-types

      - name: Validate Types
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: run check-types

      - name: Test
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: run test

      - uses: jwalton/gh-find-current-pr@v1
        if: github.ref_name != 'main'
        id: findPr
        with:
          state: open

      - name: Build
        if: github.ref_name != 'main'
        uses: VaultVulp/action-pipenv@v2.0.1
        env:
          PIPENV_DONT_LOAD_ENV: true
          MPYL_VERSION: "${{ steps.findPr.outputs.pr }}-${{ github.run_number }}"
        with:
          command: run build

      - name: Publish package
        if: github.ref_name != 'main'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true
          print_hash: true
          skip_existing: true
