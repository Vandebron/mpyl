<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e9f98855-1f4e-4991-8362-e312dcaf21be" name="Changes" comment="#  (If applied, this commit will...) &lt;subject&gt; (Max 60 char)&#10;# |&lt;----       Using a Maximum Of 60 Characters       ----&gt;|&#10;&#10;&#10;# Explain why this change is being made&#10;# |&lt;----   Try To Limit Each Line to a Maximum Of 72 Characters   ----&gt;|&#10;&#10;# Provide links or keys to any relevant tickets, articles or other resources&#10;# Example: branch: &lt;type&gt;/BIGD-281-consistent-commit-messages&#10;&#10;branch:&#10;# --- COMMIT END ---&#10;# Type can be&#10;#    feature  (new feature)&#10;#    fix      (bug fix)&#10;#    refactor (refactoring production code)&#10;#    style    (formatting, missing semi colons, etc; no code change)&#10;#    docs     (changes to documentation)&#10;#    test     (adding or refactoring tests; no production code change)&#10;#    chore    (updating grunt tasks etc; no production code change)&#10;# --------------------&#10;# Remember to&#10;#    Capitalize the subject line&#10;#    Use the imperative mood in the subject line&#10;#    Do not end the subject line with a period&#10;#    Separate subject from body with a blank line&#10;#    Use the body to explain what and why vs. how&#10;#    Can use multiple lines with &quot;-&quot; for bullet points in body&#10;# --------------------">
      <change afterPath="$PROJECT_DIR$/tests/cli/test_resources/build_jenkins_help_text.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.name" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/jsonSchemas.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/markdown.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/sbt.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/cli/commands/test_cli.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/cli/commands/test_cli.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/cli/test_resources/list_projects_text.txt" beforeDir="false" afterPath="$PROJECT_DIR$/tests/cli/test_resources/list_projects_text.txt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ComposerSettings">
    <execution />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectId" id="2PYbz5yovcNXhToyu9bsHoMJK1T" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;feature/TECH-435-IMPROVING-CLI&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/ewaldschrader/git/mpyl&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.26234567&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.4190193&quot;,
    &quot;settings.build.tools.auto.reload&quot;: &quot;ALL&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;watcher.settings&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/mpyl/cli/commands/build" />
      <recent name="$PROJECT_DIR$/tests/projects/service/deployment/.mpyl" />
      <recent name="$PROJECT_DIR$/tests/projects/job/deployment/.mpyl" />
      <recent name="$PROJECT_DIR$/tests/projects/job/deployment" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.pytest for test_cli.TestCli.test_build_jenkins_help_output">
    <configuration name="__init__" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="mpyl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/mpyl" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/mpyl/__init__.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="build" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="mpyl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/src/mpyl/cli" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/mpyl/cli/build.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for steps.test_steps.TestSteps.test_find_all_steps" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="mpyl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <EXTENSION ID="net.ashald.envfile">
        <option name="IS_ENABLED" value="false" />
        <option name="IS_SUBST" value="false" />
        <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
        <option name="IS_IGNORE_MISSING_FILES" value="false" />
        <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
        <ENTRIES>
          <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
        </ENTRIES>
      </EXTENSION>
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;steps.test_steps.TestSteps.test_find_all_steps&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_steps.TestSteps.test_find_all_steps" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="mpyl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/steps" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_steps.TestSteps.test_find_all_steps&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_cli.TestCli.test_build_jenkins_help_output" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="mpyl" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests/cli/commands" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_cli.TestCli.test_build_jenkins_help_output&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.__init__" />
      <item itemvalue="Python.build" />
      <item itemvalue="Python tests.pytest for test_cli.TestCli.test_build_jenkins_help_output" />
      <item itemvalue="Python tests.Python tests for steps.test_steps.TestSteps.test_find_all_steps" />
      <item itemvalue="Python tests.Python tests for test_steps.TestSteps.test_find_all_steps" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.pytest for test_cli.TestCli.test_build_jenkins_help_output" />
        <item itemvalue="Python.__init__" />
        <item itemvalue="Python.build" />
        <item itemvalue="Python tests.Python tests for test_steps.TestSteps.test_find_all_steps" />
        <item itemvalue="Python tests.Python tests for steps.test_steps.TestSteps.test_find_all_steps" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration>$USER_HOME$/.subversion</configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e9f98855-1f4e-4991-8362-e312dcaf21be" name="Changes" comment="" />
      <created>1683637222241</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1683637222241</updated>
      <workItem from="1683637223693" duration="11316000" />
      <workItem from="1684225194008" duration="19384000" />
      <workItem from="1684845886787" duration="3000" />
      <workItem from="1684846290099" duration="2624000" />
      <workItem from="1684916342622" duration="5806000" />
      <workItem from="1685089374873" duration="7522000" />
      <workItem from="1685619498846" duration="1908000" />
      <workItem from="1685705498886" duration="1193000" />
      <workItem from="1686068962014" duration="20409000" />
      <workItem from="1686754058811" duration="134000" />
      <workItem from="1686754197134" duration="1309000" />
      <workItem from="1686815357262" duration="3741000" />
      <workItem from="1686830262621" duration="2666000" />
      <workItem from="1688037673267" duration="26393000" />
      <workItem from="1690286407128" duration="3548000" />
    </task>
    <servers />
  </component>
  <component name="TerminalProjectNonSharedOptionsProvider">
    <envs>
      <env key="CHANGE_ID" value="0" />
    </envs>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="true" />
                </map>
              </option>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="security-scan" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="#  (If applied, this commit will...) &lt;subject&gt; (Max 60 char)&#10;# |&lt;----       Using a Maximum Of 60 Characters       ----&gt;|&#10;&#10;&#10;# Explain why this change is being made&#10;# |&lt;----   Try To Limit Each Line to a Maximum Of 72 Characters   ----&gt;|&#10;&#10;# Provide links or keys to any relevant tickets, articles or other resources&#10;# Example: branch: &lt;type&gt;/BIGD-281-consistent-commit-messages&#10;&#10;branch:&#10;# --- COMMIT END ---&#10;# Type can be&#10;#    feature  (new feature)&#10;#    fix      (bug fix)&#10;#    refactor (refactoring production code)&#10;#    style    (formatting, missing semi colons, etc; no code change)&#10;#    docs     (changes to documentation)&#10;#    test     (adding or refactoring tests; no production code change)&#10;#    chore    (updating grunt tasks etc; no production code change)&#10;# --------------------&#10;# Remember to&#10;#    Capitalize the subject line&#10;#    Use the imperative mood in the subject line&#10;#    Do not end the subject line with a period&#10;#    Separate subject from body with a blank line&#10;#    Use the body to explain what and why vs. how&#10;#    Can use multiple lines with &quot;-&quot; for bullet points in body&#10;# --------------------" />
    <option name="LAST_COMMIT_MESSAGE" value="#  (If applied, this commit will...) &lt;subject&gt; (Max 60 char)&#10;# |&lt;----       Using a Maximum Of 60 Characters       ----&gt;|&#10;&#10;&#10;# Explain why this change is being made&#10;# |&lt;----   Try To Limit Each Line to a Maximum Of 72 Characters   ----&gt;|&#10;&#10;# Provide links or keys to any relevant tickets, articles or other resources&#10;# Example: branch: &lt;type&gt;/BIGD-281-consistent-commit-messages&#10;&#10;branch:&#10;# --- COMMIT END ---&#10;# Type can be&#10;#    feature  (new feature)&#10;#    fix      (bug fix)&#10;#    refactor (refactoring production code)&#10;#    style    (formatting, missing semi colons, etc; no code change)&#10;#    docs     (changes to documentation)&#10;#    test     (adding or refactoring tests; no production code change)&#10;#    chore    (updating grunt tasks etc; no production code change)&#10;# --------------------&#10;# Remember to&#10;#    Capitalize the subject line&#10;#    Use the imperative mood in the subject line&#10;#    Do not end the subject line with a period&#10;#    Separate subject from body with a blank line&#10;#    Use the body to explain what and why vs. how&#10;#    Can use multiple lines with &quot;-&quot; for bullet points in body&#10;# --------------------" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/mpyl$.coverage" NAME=" Coverage Results" MODIFIED="1684336021399" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/mpyl$mpyl_example.coverage" NAME="mpyl-example Coverage Results" MODIFIED="1683641521515" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/mpyl$MPyL.coverage" NAME="MPyL Coverage Results" MODIFIED="1683804759174" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>