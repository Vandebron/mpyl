[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[packages]
jsonschema = "==4.23.0"
mypy = "==1.13.0"
gitpython = "==3.1.43"
"ruamel.yaml" = "==0.18.6"
kubernetes = "==32.0.1"
junitparser = "==2.8.0"
pyjwt = "==2.5.0" # forced downgrade due to https://stackoverflow.com/questions/33198428/jwt-module-object-has-no-attribute-encode
cryptography = "==39.0.2"
python-on-whales = "==0.76.1"
pygithub = "==2.4.0"
slack-sdk = "==3.33.3"
atlassian-python-api = "==3.39.0"
click = "==8.1.8"
rich = "==13.9.4"
pyaml-env = "==1.2.2"
python-dotenv = "==1.0.0"
questionary = "==2.0.1"
toml = "==0.10.2"
boto3 = "==1.37.23"
deepdiff = "==6.4.1"
requests = "==2.31.0"

[dev-packages]
setuptools = "==75.8.0"
types-jsonschema = "==4.23.0.20240813"
types-pyyaml = "==6.0.12.2"
types-requests = "==2.28.2"
twine = "==5.1.1"
types-six = "==1.16.21.4"
pylint = "==3.2.7"
pypi-cleanup = "==0.1.8"
pytest = "==7.2.1"
pytest-xdist = "==3.3.1"
pdoc = "==14.7.0"
sqlalchemy = "<2.0.0" # forced downgrade https://github.com/dagster-io/dagster/discussions/11881
coverage = "==7.2.2"
'black[d]' = "==23.3.0"
black = "==23.3.0"
dill = "==0.3.8"

[requires]
python_version = "3.12"

[scripts]
cli = "python run.py"
cli-ext = "bash -c \"python $(dirname \\$PIPENV_PIPFILE)/src/mpyl/__main__.py $(echo $0) $(echo $@)\""
build = "python setup.py bdist_wheel"
create-graph = "pyreverse -o png src/mpyl"
lint = "pylint --rcfile .pylintrc src/"
lint-test = "pylint --rcfile .pylintrc-test tests/"
format = "black --check --config pyproject.toml --diff . --exclude venv|build/lib"
format-update = "black .  --config pyproject.toml --exclude venv|build/lib"
test = "pytest -n 4 -W ignore::pytest.PytestCollectionWarning -v tests"
test-coverage = "bash -c 'coverage run -m pytest -v tests && coverage report -m --sort cover'"
test-ci = "coverage run -m pytest --junitxml=build/test-result/test.xml"
test-ci-coverage = "coverage xml -o build/coverage.xml"
doc = "python -m pdoc -d restructuredtext -o docs/ --favicon https://user-images.githubusercontent.com/1911436/266026788-9c1955a3-3bb4-4372-b8dd-fecc06b8295c.png --logo https://user-images.githubusercontent.com/1911436/266025430-b2cb6249-39e4-4441-b436-5015ad677716.png src/mpyl"
doc-preview = "python -m pdoc -d restructuredtext --favicon https://user-images.githubusercontent.com/1911436/266026788-9c1955a3-3bb4-4372-b8dd-fecc06b8295c.png --logo https://user-images.githubusercontent.com/1911436/266025430-b2cb6249-39e4-4441-b436-5015ad677716.png src/mpyl"
check-types = "mypy --explicit-package-bases --check-untyped-defs src/mpyl/"
check-types-test = "mypy --no-incremental --explicit-package-bases --check-untyped-defs tests/"
validate = "python validate.py"
validate-config-example = "python validate-config-example.py"
install-types = "mypy --install-types --non-interactive src/mpyl/  "
release = "python release.py"
run = "python mpyl-example.py --local --dryrun --all"
run-ci = "python mpyl-example.py"
run-plugin = "python plugin-run.py"
run-dagster-ci = "python mpyl-dagster-example.py"
run-dagit = "dagit --workspace workspace.yml"
publish = "twine upload --comment \\\"${TWINE_COMMENT}\\\" --skip-existing --verbose dist/*"
publish-test = "twine upload --repository testpypi --skip-existing --skip-existing --verbose dist/*"
start-github-status-check = "python mpyl-github-status-check.py"
report = "python mpyl-reporter.py"
